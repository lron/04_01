name: Pipeline

on: [push]
env:
  APPLICATION_NAME: app2
jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python environment
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
        architecture: x64
    - name: Install requirements
      run: pip install --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231,R1732,W1514 *.py
        pylint --disable=C0301 --disable=C0326 *.py
    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up GCloud
      run: gcloud auth activate-service-account --key-file=${{ secrets.GCP_SERVICE_ACCT_KEY }}
      #uses: GoogleCloudPlatform/github-actions/setup-gcloud@main
      #with:
        #version: '274.0.1'
      #  service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
      #  service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    #- run: |
    #    gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
    #    gcloud auth configure-docker
    #    gcloud info

    - name: Build and tag image
      run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .

    - name: Push to GCP image registry
      #run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest
      run: gcloud docker -- push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest
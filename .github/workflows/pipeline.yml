name: Pipeline

on: [push]
env:
  APPLICATION_NAME: app2
jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python environment
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
        architecture: x64
    - name: Install requirements
      run: pip install --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231,R1732,W1514 *.py
        pylint --disable=C0301 --disable=C0326 *.py
    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-18.04
    steps:
    # - uses: actions/checkout@v3
    # - name: Build and tag image
    #   run: docker build -t "myimage/${{ env.APPLICATION_NAME }}:latest" .

#    - name: Log in to Azure
#      uses: azure/login@v1
#      with:
#        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Azure container registry 
      uses: azure/docker-login@v1
      with:
        login-server: lrontest.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build . -t myimage/${{ env.APPLICATION_NAME }}:${{ github.sha }}
        docker push myimage/${{ env.APPLICATION_NAME }}:${{ github.sha }}

#    - name: Push to GCP image registry
      #run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest
#      run: gcloud docker -- push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest
